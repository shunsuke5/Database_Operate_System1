データベースシステム1 メモ

・データベースを簡易的にブラウザから操作するアプリを作成する。

・テーブルのキーを取得して、それを表の一番上に表示したい。

・php言語について基礎からしっかり勉強した方が良いと感じたため、そちらを優先することにした。

###20240613###

・phpの変数の内容をHTML形式で表示する方法を調べる。

・fetchAll()で取得した配列の中身をどのように表示すればきれいに出力できるかがわからずにいたが、以下のように記述することで解決した。

    foreach($result as $key => $val) {
        echo $val['name'] . "&nbsp";
        echo $val['color'] . "<br>";
    }

　echo $valでは「Array」と表示されてしまったが、echo $val['name'] では想定している結果が表示できた。
　よく考えてみればfetchAll()は残りの全行を取得するので、2行以上ある場合は2次元配列が返されるのが当然である。
　今回は偶然「もしかして自分がfetchAll()で取得しようとしている配列はこの形なのでは？」というページに辿り着けたから解決できたものの、
　まだphpの配列について全然理解できていないので頑張りたい。

    Array ( [0] => Array ( [name] => apple [0] => apple [color] => red [1] => red )
            [1] => Array ( [name] => grape [0] => grape [color] => purple [1] => purple ) )

　print_rで出力するfetchAll()のこの結果で、複数の配列を持った配列といったことはもうわかったが、なぜ[name] => apple だけでなく
　[0] => apple という表記もあるのか、[color]に関しても[color] => red だけでなく [1] => red という表記がある理由がわからない。
　この[0]と[1]は何を示しているのか？思ったのだがこれは単にインデックスでは？name,colorというのはあくまでキー値であり、
　0と1はインデックス番号、つまりこの2つは同じ意味を持つ。試しに $val['name'],['color'] を $val[0],[1] にしてみたところ
　全く同じ結果が得られたので、ただのインデックス番号であった。

　参考サイト　https://yukipon.okserver.jp/%E9%85%8D%E5%88%97%E3%82%92html%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%81%AB%E5%87%BA%E5%8A%9B/

・次はfetchAll()の結果をHTMLで出力するところから、上記サイトがまた参考になりそう。

###20240614###

・phpの値をHTMLで出力することができた。以下のような記述。

    <h1><?= $val['name'] ?>&nbsp;<?= $val['color'] ?></h1>

・HTMLで表を出力し、そこにphpの値を格納したい。phpにcssを読み込ませるところから。

###20240616###

・php内で記述したHTMLにCSSを反映させることができた。

・削除の方法はとりあえず削除したいデータのnameキーを入力して
　削除する形にする。そのためにつくらなければいけないものと
　しては、まず表(select.phpを流用できたらそれが良い)、
　それと入力フォーム、削除完了の画面が必要。

・delete.phpのコード記述から

###20240617###

・delete.phpのコードを記述した。

・delete.phpで削除処理を行った後、そのままのページで
　連続して削除処理ができるように表だけ更新したい。

・insert.phpも上記と同じように、そのままのページで
　連続して追加処理ができるようにしたい。

　その流れを書くと

    「削除ボタン」を押す
    ↓
    入力フォーム、データベース表、「戻る」ボタンの3つだけ表示したい
    ↓
    成功すれば、「成功しました」の表示と表の更新を同じページで行いたい。

　selectクエリがfalseを返す or ブラウザの戻るボタンが押される　までループを続ければよいか？
　つまり今はinclude select.phpで表を表示しているが、それをソースコードにしてdelete.phpでもselectクエリを送る形にする。
　あとはページの「戻る」ボタンが押されたときにphpではそのアクションをどうすれば拾えるのか、ページが移動したらループは終わるのだろうか？
　そして、もし表の中身をすべて削除した場合は新たに「データベースにデータがありません。」と「戻る」ボタンの2つだけを表示したい。

・思ったのだが、最初に追加、表示、削除の処理を選ばせる必要はないのでは？追加フォーム、削除フォーム、データベース表の
　3つを常に表示し、操作を行うたびにページを更新するようなwebアプリを作りたい。
　新たにall.phpを作成し、そのファイル内で全て完結させることを目標にした。

・データベースの表示をアクションごとに更新できる
　プログラムを考えるところから

[進捗]
・表を真ん中に持ってくる
・「削除」ボタンを押した時のページを作成する
・データを追加、削除したときに表を更新する処理を入れる

insert.php


select.php

・テーブルのキーを取得して表の一番上にそれを表示する

delete.php


[完了]
・最初に表示するHTMLをボタン3つのやつに変更する
・php内に記述したHTMLにCSSを反映させる。
・「戻る」ボタンを追加してindex.htmlに戻れるようにする
・insert,select,delete.phpをall.phpにまとめ、
　　1ページ内で全ての操作を完結させるようなページを作る

insert.php

select.php
・fetchAll()の結果をわかりやすく表示する
・phpの変数をHTML形式で表示する
・表を作成し、その中にデータベース内容を表示する

delete.php
・ソースコードを記述する

=================================================================================================================================

エラーやミス、つまずいたことなど

・echo $result[0];　として配列の内容を表示しようとしたら、「Warning: Array to string conversion in」のエラーの後に array と表示された
　　→ phpでは配列をそのまま出力することができない。print_rなどやforeachを用いて表示する。

・if (!($_POST['add_name'] === null)) のようにしてデータ送信の可否を判定しようとしたら、
　「Warning: Undefined array key "delete_color" in」のように警告が表示されてしまう。
　　→ どうやらもともと記述していた if (!($_POST['add_name'] === null)) のようにnull判定ではこの警告は防げないらしい。
　　　代わりにisset()やarray_key_exists()を使う。試しに isset($_POST['add_name']) としたら警告が表示されなくなった。
　　　参考サイト　https://qiita.com/Jinta/items/a1ee8d54a112a02e631c

・